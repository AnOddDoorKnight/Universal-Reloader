const HDLD_GSPouch = "gsp";

//==================================================
// Base Definition
//==================================================
class GunsmithPouch : HDBackpack {
	default {
		tag "Gunsmith's Pouch";
		HDBackpack.MaxCapacity 200;
		Inventory.Icon "GSPPA0";
		Inventory.PickupMessage "Picked up a gunsmith's pouch, for all your gunpowder!";
		scale 0.6;
		hdweapon.wornlayer 0;
		hdweapon.refid HDLD_GSPouch;
	}

	override string, double GetPickupSprite() { return "GSPPA0", 1.0; }

	override void BeginPlay() {
		super.BeginPlay();
		Storage = new('GSP_ItemStorage');
		weaponstatus[GSP_AMOUNT] = max(weaponstatus[GSP_AMOUNT], 1);
		UpdateCapacity();
	}

	override void PostBeginPlay() {
		super.PostBeginPlay();
		weaponstatus[GSP_AMOUNT] = max(weaponstatus[GSP_AMOUNT], 1);
		UpdateCapacity();
	}

	// Thanks Accensus for figuring out multiple pouches in loadout codes!
	override void LoadoutConfigure(string input) {
		int amt = input.ToInt();
		if (amt > 0)
		{
			weaponstatus[GSP_AMOUNT] = amt;
			UpdateCapacity();
		}
		super.LoadoutConfigure(input);
	}

	States {
		Spawn:
			GSPP ABC -1 NoDelay
			{
				if (invoker.Storage.TotalBulk ~== 0)
				{
					frame = 1;
				}
				else if (target)
				{
					translation = target.translation;
					frame = 2;
				}
				invoker.bNO_AUTO_SWITCH = false;
			}
			Stop;
		User3:
			#### # 0 A_MagManager("");
			goto Ready;
	}

	enum GSPouchSlots {
		GSP_AMOUNT
	}
}
